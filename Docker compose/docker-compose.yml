version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://192.168.0.26:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  acquisitiongateway:
    image: ${DOCKER_REGISTRY-}acquisitiongateway
    build:
      context: RoadConditionMonitoring/Microservices/AcquisitionGateway
      dockerfile: AcquisitionGateway/Dockerfile
    ports: 
      - "49158:80"
  python-sensor-temp-1:
    build: "Docker images/python-sensor-temp/python-sensor-temp-1"
    ports:
      - "5001:5000"
  python-sensor-temp-2:
    build: "Docker images/python-sensor-temp/python-sensor-temp-2"
    ports:
      - "5002:5000"
  python-sensor-temp-3:
    build: "Docker images/python-sensor-temp/python-sensor-temp-3"
    ports:
      - "5003:5000"
  python-sensor-temp-4:
    build: "Docker images/python-sensor-temp/python-sensor-temp-4"
    ports:
      - "5004:5000"
  python-sensor-temp-5:
    build: "Docker images/python-sensor-temp/python-sensor-temp-5"
    ports:
      - "5005:5000"
  python-sensor-temp-6:
    build: "Docker images/python-sensor-temp/python-sensor-temp-6"
    ports:
      - "5006:5000"
  python-sensor-temp-7:
    build: "Docker images/python-sensor-temp/python-sensor-temp-7"
    ports:
      - "5007:5000"
  python-sensor-temp-8:
    build: "Docker images/python-sensor-temp/python-sensor-temp-8"
    ports:
      - "5008:5000"
  python-sensor-air-1:
    build: "Docker images/python-sensor-air"
    ports:
      - "5011:5000"
  python-sensor-air-2:
    build: "Docker images/python-sensor-air"
    ports:
      - "5012:5000"
  python-sensor-air-3:
    build: "Docker images/python-sensor-air"
    ports:
      - "5013:5000"
  python-sensor-air-4:
    build: "Docker images/python-sensor-air"
    ports:
      - "5014:5000"
  python-sensor-air-5:
    build: "Docker images/python-sensor-air"
    ports:
      - "5015:5000"
  temperaturemicroservice:
    image: ${DOCKER_REGISTRY-}temperaturemicroservice
    build:
      context: RoadConditionMonitoring/Microservices/TemperatureMicroservice
      dockerfile: TemperatureMicroservice/Dockerfile
    ports: 
      - "49161:80"
  cassandra:
    image: cassandra
    ports:
      - "9160:9160"
      - "9043:9042"